.video-grid-main {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
    column-gap: 15px;
    row-gap: 35px;
}

/* Commented out to fit the 'video-previews' perfectly in 'video-grid-main'. Now page will respond when resized.
Media query will be used to fine tune responsiveness ----
.video-preview {            
    display: inline-block;
    margin-right: 15px;
    vertical-align: top;
    width: 300px; 

}

*/

.thumbnail {
    /* width: 300px;  This forced the image's width, & made page resizing inffective  */
    width: 100%; /* thumbnail image will fit perfectly into the set grid column. i.e will take up 100% of the grid's '1fr' */ 
}

.thumbnail-box {
    margin-bottom: 12px;

    position: relative;
}

.video-time {
    background-color: black;
    font-weight: 500;
    color: white;

    position: absolute;
    
    right: 10px;
    bottom: 20px;
    padding: 1%;
    font-size: 12px;
    border-radius: 3px;

}

.video-info-grid {
    display: grid;
    grid-template-columns: 50px 1fr;
 }


.video-title {
    margin-top: 0;
    font-size: 14px;
    font-weight: 500;
    line-height: 20px;
    margin-bottom: 12px;
}

.video-author,
.video-stats {
    font-size: 12px;
    color: rgb(96, 96, 96);
}

.video-author {
    margin-bottom: 6px;
}

/* The styles below is commented out because Css grids, preferable for alignments, is used in place of the display property, 'inline-block'. */

/* .channel-picture,
 .video-info {
    display: inline-block;
 } */

 /* .channel-picture {
    width: 50px;
    vertical-align: top;
    background-color: gray;
 } */

 /* .video-info {
    width: 245px;
    background-color: gray;
 } */

 .profile-picture {
    width: 40px; /* Take up entire width of it's container; 'channel-picture' if set to a 100% */
    border-radius: 50px;
 }



